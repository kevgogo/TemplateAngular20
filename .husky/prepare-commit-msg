#!/usr/bin/env sh

# Evitar procesar merges, squash, etc.
[ "$2" = "merge" ] && exit 0
[ "$2" = "squash" ] && exit 0

MSG_FILE="$1"

# Obtener información básica
BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo "main")
TICKET=$(echo "$BRANCH" | grep -o '[A-Z][A-Z]*-[0-9][0-9]*' | head -1)

# Contar archivos staged
ADDED=$(git diff --cached --name-only --diff-filter=A | wc -l | tr -d ' ')
MODIFIED=$(git diff --cached --name-only --diff-filter=M | wc -l | tr -d ' ')
DELETED=$(git diff --cached --name-only --diff-filter=D | wc -l | tr -d ' ')

# Detectar tipo simple
TYPE="chore"
case "$BRANCH" in
  feat/*|feature/*) TYPE="feat" ;;
  fix/*|hotfix/*) TYPE="fix" ;;
  docs/*) TYPE="docs" ;;
esac

# Construir contadores
COUNTERS=""
[ "$ADDED" -gt 0 ] && COUNTERS="+$ADDED"
[ "$MODIFIED" -gt 0 ] && COUNTERS="$COUNTERS${COUNTERS:+,}~$MODIFIED"
[ "$DELETED" -gt 0 ] && COUNTERS="$COUNTERS${COUNTERS:+,}-$DELETED"

# Leer mensaje existente
EXISTING_MSG=$(head -1 "$MSG_FILE" 2>/dev/null | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')

# Si el mensaje ya es válido, solo agregar contadores
if echo "$EXISTING_MSG" | grep -q "^[a-z]*:"; then
  NEW_TITLE="$EXISTING_MSG"
else
  # Crear nuevo título
  SUBJECT="${EXISTING_MSG:-"actualizar archivos"}"
  if [ -n "$TICKET" ]; then
    NEW_TITLE="$TYPE: [$TICKET] $SUBJECT"
  else
    NEW_TITLE="$TYPE: $SUBJECT"
  fi
fi

# Agregar contadores si existen
if [ -n "$COUNTERS" ]; then
  NEW_TITLE="$NEW_TITLE ($COUNTERS)"
fi

# Generar lista de archivos
FILES_LIST=""
if [ "$ADDED" -gt 0 ]; then
  FILES_LIST="$FILES_LIST

### ✨ Archivos agregados:"
  git diff --cached --name-only --diff-filter=A | while read -r file; do
    FILES_LIST="$FILES_LIST
  - $file"
  done
fi

if [ "$MODIFIED" -gt 0 ]; then
  FILES_LIST="$FILES_LIST

### 🔧 Archivos modificados:"
  git diff --cached --name-only --diff-filter=M | while read -r file; do
    FILES_LIST="$FILES_LIST
  - $file"
  done
fi

if [ "$DELETED" -gt 0 ]; then
  FILES_LIST="$FILES_LIST

### 🗑️ Archivos eliminados:"
  git diff --cached --name-only --diff-filter=D | while read -r file; do
    FILES_LIST="$FILES_LIST
  - $file"
  done
fi

# Escribir el mensaje completo
cat > "$MSG_FILE" << EOF
$NEW_TITLE

## 📋 Cambios realizados
$FILES_LIST

## 🧪 Testing
- [ ] Probado manualmente
- [ ] Tests actualizados

EOF

[ -n "$TICKET" ] && echo "Refs: $TICKET" >> "$MSG_FILE"